/**
 * @typedef BulkChargeInitiateRequest
 * @property {string} authorization - Customer's authorization code
 * @property {number} amount - Amount to charge in kobo or lowest currency unit
 * @property {string} reference - Unique reference for this charge
 */
export interface BulkChargeInitiateRequest {
  authorization: string;
  amount: number;
  reference: string;
}

/**
 * @typedef BulkChargeInitiateResponse
 * @property {string} batch_code - Unique batch code generated by Paystack
 * @property {string} reference - Reference for the bulk charge batch
 * @property {number} id - Batch ID
 * @property {number} integration - Integration ID
 * @property {string} domain - Domain type
 * @property {string} status - Status of the batch (active, paused, complete)
 * @property {number} total_charges - Total charges in the batch
 * @property {number} pending_charges - Pending charges in the batch
 * @property {string} createdAt - ISO date string
 * @property {string} updatedAt - ISO date string
 */
export interface BulkChargeInitiateResponse {
  batch_code: string;
  reference: string;
  id: number;
  integration: number;
  domain: string;
  status: string;
  total_charges: number;
  pending_charges: number;
  createdAt: string;
  updatedAt: string;
}

/**
 * @typedef BulkChargeBatch
 * @property {string} domain
 * @property {string} batch_code
 * @property {string} status
 * @property {number} id
 * @property {number} total_charges
 * @property {number} pending_charges
 * @property {string} createdAt
 * @property {string} updatedAt
 */
export interface BulkChargeBatch {
  domain: string;
  batch_code: string;
  status: string;
  id: number;
  total_charges?: number;
  pending_charges?: number;
  createdAt: string;
  updatedAt: string;
}

/**
 * @typedef BulkChargeItemsResponse
 * @property {number} integration
 * @property {number} bulkcharge
 * @property {object} customer
 * @property {object} authorization
 * @property {object} transaction
 * @property {string} domain
 * @property {number} amount
 * @property {string} currency
 * @property {string} status
 * @property {number} id
 * @property {string} createdAt
 * @property {string} updatedAt
 */
export interface BulkChargeItemsResponse {
  integration: number;
  bulkcharge: number;
  customer: Record<string, any>;
  authorization: Record<string, any>;
  transaction: Record<string, any>;
  domain: string;
  amount: number;
  currency: string;
  status: string;
  id: number;
  createdAt: string;
  updatedAt: string;
}

/**
 * @typedef BulkChargePauseResumeResponse
 * @property {boolean} status
 * @property {string} message
 */
export interface BulkChargePauseResumeResponse {
  status: boolean;
  message: string;
}

/**
 * @typedef BulkChargeBatchListResponse
 * @property {BulkChargeBatch[]} data
 * @property {object} meta
 */
export interface BulkChargeBatchListResponse {
  data: BulkChargeBatch[];
  meta: any;
}
